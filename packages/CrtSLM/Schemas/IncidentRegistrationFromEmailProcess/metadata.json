{
  "MetaData": {
    "Schema": {
      "ManagerName": "ProcessSchemaManager",
      "UId": "51b40818-bf00-40ad-8e8b-e9c961274620",
      "A2": "IncidentRegistrationFromEmailProcess",
      "A5": "86333651-2465-47a7-89cb-063a768d73b8",
      "B1": [],
      "B2": [],
      "B3": [
        {
          "UId": "54798ce5-926b-4684-a5d5-b768b2901a77",
          "A2": "Terrasoft.Configuration",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "e1f38603-1e03-4ffc-9ecc-575e39862225",
          "A2": "Terrasoft.Core.Factories",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "828aae12-9105-4428-91be-95ccb167b0a7",
          "GF1": "null"
        },
        {
          "UId": "1fb6368d-de33-4381-bb45-8acb30917861",
          "A2": "System.Collections.Generic",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "9021629f-8034-47ed-9e6e-48c4ec3697f0",
          "A2": "Terrasoft.Core.DB",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "a659decf-2b72-4fdd-9084-bf4eaf2c9f9f",
          "A2": "Terrasoft.Core.Entities",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "5b7d76c8-35fe-46b7-8ef3-3e520236043a",
          "A2": "System.Data",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "2c9b3d3f-8e1a-43c7-a728-c07174d230dd",
          "A2": "global::Common.Logging",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "6841fb5f-b769-4a23-90d3-1a647ff95478",
          "A2": "System.Linq",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        },
        {
          "UId": "743f54af-ca0e-4c24-b1fb-c7ace43bb7ff",
          "A2": "Creatio.FeatureToggling",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "GF1": "null"
        }
      ],
      "B6": "ff2cadfe-f4c2-06cd-930f-1401ae848c21",
      "B8": "0.0.0.0",
      "FJ1": [
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaParameter",
          "UId": "46f039d5-c464-4308-912a-e9d3989e6a94",
          "A2": "RecordId",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "L1": "23018567-a13c-4320-8687-fd6f9e3699bd",
          "L8": {
            "GS1": 3,
            "GS2": "[#[IsOwnerSchema:false].[IsSchema:false].[Element:{76a21505-7d14-4f23-ad0d-e47af2be01cb}].[Parameter:{40fedcfc-6ac7-465c-bbb1-1c9812d2f7ac}]#]",
            "GS5": "51b40818-bf00-40ad-8e8b-e9c961274620"
          }
        }
      ],
      "BK8": "bb4d6607-026b-4b27-b640-8f5c77c1e89d",
      "BK15": [],
      "BK37": {
        "BL1": "Terrasoft.Core.Process.ProcessSchemaParameter",
        "UId": "cdd58be7-2dba-4a5e-869b-1ad5d6d7513a",
        "A2": "NotificationCaption",
        "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
        "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
        "L1": "8b3f29bb-ea14-4ce5-a5c5-293a929b6ba2",
        "L8": {
          "GS1": 3,
          "GS2": "[#[PropertyValue:Caption]#]"
        }
      },
      "BK1": "FFFFFFFF",
      "BK2": "FFBBBBBB",
      "BK3": [
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaLaneSet",
          "UId": "1dcb6e5d-f523-4437-85b7-3f0f190caab8",
          "A2": "LaneSet1",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "BL3": "5;5",
          "BL5": 1,
          "BL6": "LaneSet",
          "BL7": "11a47caf-a0d5-41fa-a274-a0b11f77447a",
          "BL8": "bb4d6607-026b-4b27-b640-8f5c77c1e89d",
          "BM1": 0,
          "BM4": [
            {
              "BL1": "Terrasoft.Core.Process.ProcessSchemaLane",
              "UId": "664cae17-2784-4523-bf78-783233a54b5c",
              "A2": "Lane1",
              "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
              "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
              "A5": "86333651-2465-47a7-89cb-063a768d73b8",
              "IL2": "1dcb6e5d-f523-4437-85b7-3f0f190caab8",
              "BL3": "29;0",
              "BL5": 1,
              "BL6": "Lane",
              "BL7": "abcd74b9-5912-414b-82ac-f1aa4dcd554e",
              "CD1": [],
              "CD2": [],
              "CD4": "1dcb6e5d-f523-4437-85b7-3f0f190caab8",
              "CD7": []
            }
          ]
        }
      ],
      "BK5": [],
      "BK4": [
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaTerminateEvent",
          "UId": "69334076-e1f8-4950-8f16-93724bfaafda",
          "A2": "Terminate1",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "IL2": "664cae17-2784-4523-bf78-783233a54b5c",
          "BL3": "600;184",
          "BL6": "Event",
          "BL7": "1bd93619-0574-454e-bb4e-cf53b9eb9470",
          "BL8": "bb4d6607-026b-4b27-b640-8f5c77c1e89d",
          "BN2": "27;27",
          "BO3": true,
          "FC1": []
        },
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaScriptTask",
          "UId": "11511b50-76a7-45bd-b533-4f7630ccf9b4",
          "A2": "RegisterIncidentScriptTask",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "IL2": "664cae17-2784-4523-bf78-783233a54b5c",
          "BL3": "311;170",
          "BL6": "Task",
          "BL7": "0e490dda-e140-4441-b600-6f5c64d024df",
          "BL8": "bb4d6607-026b-4b27-b640-8f5c77c1e89d",
          "BN2": "69;55",
          "BO3": true,
          "BP2": [],
          "CL2": "FFFFFFFF",
          "CH1": "try {\r\n\t_log.InfoFormat(@\"[EmailSyncSessionId:{0}]|Process was started\", Get<Guid>(\"RecordId\"));\r\n\tlock (_syncLock) {\r\n\t    Guid recordId = Get<Guid>(\"RecordId\");\r\n\t    var userConnection = Get<UserConnection>(\"UserConnection\");\r\n\t    var emailsList = GetActivityRecordsId(recordId);\r\n\t\tvar activitySchema = userConnection.EntitySchemaManager.FindInstanceByName(\"Activity\");\r\n\t    foreach (var email in emailsList) {\r\n\t        _log.InfoFormat(@\"[EmailSyncSessionId:{1}]|Start register case for ActivityId:{0}\", email.ActivityId, Get<Guid>(\"RecordId\"));\r\n\t        try {\r\n\t        \tif(email.CaseId == default(Guid)) {\r\n\t\t\t\t\tvar CaseIdFromCurrentChain = emailsList.FirstOrDefault(e => \r\n\t\t\t\t\t\te.ConversationId != default(Guid) && e.ConversationId == email.ConversationId && e.CaseId != default(Guid));\r\n\t\t\t\t\tif (CaseIdFromCurrentChain != null && CaseIdFromCurrentChain.CaseId != default(Guid)) {\r\n\t\t\t\t\t\temail.CaseId = CaseIdFromCurrentChain.CaseId;\r\n\t\t\t\t\t\tEntity entity = activitySchema.CreateEntity(userConnection);\r\n\t\t\t\t\t\tif (entity.FetchFromDB(email.ActivityId)) {\r\n\t\t\t\t\t\t\tentity.SetColumnValue(\"CaseId\", email.CaseId);\r\n\t\t\t\t\t\t\t_log.InfoFormat(@\"[EmailSyncSessionId:{1}]| Case wasn't created during this process activity with ActivityId:{0},\r\n\t\t\t                    bound to CaseId:{2}\", email.ActivityId, Get<Guid>(\"RecordId\"), email.CaseId);\r\n\t\t\t\t\t\t\tentity.Save();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t        \t\temail.CaseId = RegisterIncidentFromEmail(email.ActivityId);\r\n\t\t\t\t\t}\r\n\t        \t\tif(email.CaseId != default(Guid)) {\r\n\t\t        \t\tvar parentEmails = emailsList.Where(emailRecord =>\r\n\t            \t\t\t emailRecord.ParentMessageId == email.Id);\r\n\t\t        \t\tforeach(var parentEmail in parentEmails) {\r\n\t\t\t        \t\tparentEmail.CaseId = email.CaseId;\r\n\t\t\t                Entity entity = activitySchema.CreateEntity(userConnection);\r\n\t\t\t                if (entity.FetchFromDB(parentEmail.ActivityId)) {\r\n\t\t\t                \t entity.SetColumnValue(\"CaseId\", email.CaseId);\r\n\t\t\t                    _log.InfoFormat(@\"[EmailSyncSessionId:{1}]| Case was created during this process activity with ActivityId:{0},\r\n\t\t\t                    set CaseId:{2}\", parentEmail.ActivityId, Get<Guid>(\"RecordId\"), parentEmail.CaseId);\r\n\t\t\t                    entity.Save(false);\r\n\t\t\t                }\r\n\t\t        \t\t}\r\n\t        \t\t}\r\n\t        \t}\r\n\t        } catch (Exception ex) {\r\n\t\t\t\t_log.ErrorFormat(@\"[EmailSyncSessionId:{0}]| Message: {1}, CallStack: {2}, InnerException: {3}\",\r\n\t\t\t\t    Get<Guid>(\"RecordId\"), ex.Message, ex.StackTrace, ex.InnerException);\r\n\t\t\t}\r\n\t        _log.InfoFormat(@\"[EmailSyncSessionId:{1}]|End register case for ActivityId:{0}\", email.ActivityId, Get<Guid>(\"RecordId\"));\r\n\t    }\r\n\t}\r\n\t_log.InfoFormat(@\"[EmailSyncSessionId:{0}]|Process was finished\", Get<Guid>(\"RecordId\"));\r\n} catch (Exception ex) {\r\n                _log.ErrorFormat(@\"[EmailSyncSessionId:{0}]| Message: {1}, CallStack: {2}, InnerException: {3}\",\r\n                    Get<Guid>(\"RecordId\"), ex.Message, ex.StackTrace, ex.InnerException);\r\n            }\r\nreturn true;\r\n",
          "CH2": true
        },
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaStartSignalEvent",
          "UId": "76a21505-7d14-4f23-ad0d-e47af2be01cb",
          "A2": "StartSignalFinishedSyncSession",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "ff2cadfe-f4c2-06cd-930f-1401ae848c21",
          "IL2": "664cae17-2784-4523-bf78-783233a54b5c",
          "BL3": "64;184",
          "BL7": "1129e72f-0e8c-445a-b2ea-463517e86395",
          "BL8": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "BN2": "27;27",
          "BO3": true,
          "FC1": [
            {
              "BL1": "Terrasoft.Core.Process.ProcessSchemaParameter",
              "UId": "40fedcfc-6ac7-465c-bbb1-1c9812d2f7ac",
              "A2": "RecordId",
              "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
              "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
              "IL2": "76a21505-7d14-4f23-ad0d-e47af2be01cb",
              "L1": "23018567-a13c-4320-8687-fd6f9e3699bd",
              "L8": {
                "GS1": 1,
                "GS2": ""
              }
            }
          ],
          "FC2": "cdcd12e2-6301-4e3d-ba8b-1ecc93972e17",
          "ED1": false,
          "DZ1": "null",
          "DZ2": false,
          "DZ3": true,
          "DZ5": 1,
          "DZ12": "{\"$type\":\"System.Collections.ObjectModel.Collection`1[[System.String, mscorlib]], mscorlib\",\"$values\":[\"aafda194-dbd6-4337-923a-b19a456eeea9\"]}",
          "DZ13": "{\"className\":\"Terrasoft.FilterGroup\",\"serializedFilterEditData\":\"{\\\"className\\\":\\\"Terrasoft.FilterGroup\\\",\\\"items\\\":{},\\\"logicalOperation\\\":0,\\\"isEnabled\\\":true,\\\"filterType\\\":6,\\\"rootSchemaName\\\":\\\"FinishedSyncSession\\\",\\\"key\\\":\\\"\\\"}\",\"dataSourceFilters\":\"{\\\"items\\\":{},\\\"logicalOperation\\\":0,\\\"isEnabled\\\":true,\\\"filterType\\\":6,\\\"rootSchemaName\\\":\\\"FinishedSyncSession\\\"}\"}"
        },
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaSequenceFlow",
          "UId": "dddc2867-a60a-49e1-99be-8a9ac2225961",
          "A2": "SequenceFlow2",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "86333651-2465-47a7-89cb-063a768d73b8",
          "BL6": "SequenceFlow",
          "BL7": "0d8351f6-c2f4-4737-bdd9-6fbfe0837fec",
          "BL8": "bb4d6607-026b-4b27-b640-8f5c77c1e89d",
          "CI1": "11511b50-76a7-45bd-b533-4f7630ccf9b4",
          "CI2": "69334076-e1f8-4950-8f16-93724bfaafda",
          "CI3": "null",
          "CI5": "FF939598",
          "CI6": 1,
          "CI7": "1;0",
          "CI8": "-1;0",
          "CI9": "386;202"
        },
        {
          "BL1": "Terrasoft.Core.Process.ProcessSchemaSequenceFlow",
          "UId": "07b8d1a6-e90d-45d1-ab78-274c1968bba1",
          "A2": "SequenceFlow1",
          "A3": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A4": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "A5": "ff2cadfe-f4c2-06cd-930f-1401ae848c21",
          "BL7": "0d8351f6-c2f4-4737-bdd9-6fbfe0837fec",
          "BL8": "51b40818-bf00-40ad-8e8b-e9c961274620",
          "CI1": "76a21505-7d14-4f23-ad0d-e47af2be01cb",
          "CI2": "11511b50-76a7-45bd-b533-4f7630ccf9b4",
          "CI3": "null",
          "CI5": "FF939598",
          "CI6": 1,
          "CI7": "1;0",
          "CI8": "-1;0"
        }
      ],
      "BK9": [],
      "BK18": "Business process",
      "BK29": true,
      "BK30": true,
      "BK32": "private static readonly ILog _log = LogManager.GetLogger(\"IncidentRegistration\");\r\nprivate static readonly object _syncLock = new object();\r\n\r\nprivate Select GetOldSelectWithFilterBySendStatus(Guid finishedSyncSessionId, DateTime lowerDate, List<Guid> activityParticipantRolesList) {\r\n\t\t\t\tvar userConnection = Get<UserConnection>(\"UserConnection\");\r\n\t\t\t\treturn new Select(userConnection).Distinct()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ActivityId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"a\", \"CaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"cs\", \"IsFinal\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"pc\", \"Id\").As(\"ParentCaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"csp\", \"IsFinal\").As(\"IsParentCaseFinal\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ParentMessageId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ConversationId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"a\", \"SendDate\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.From(\"EmailMessageData\").As(\"emd\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"FinishedSyncSession\").As(\"fss\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"fss\", \"SyncSessionId\").IsEqual(\"emd\", \"SyncSessionId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"Activity\").As(\"a\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"a\", \"Id\").IsEqual(\"emd\", \"ActivityId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"EmailSendStatus\").As(\"ess\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"ess\", \"Id\").IsEqual(\"a\", \"EmailSendStatusId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"MailboxForIncidentRegistration\").As(\"im\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"im\", \"MailboxSyncSettingsId\").IsEqual(\"emd\", \"MailboxSyncSettings\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"Case\").As(\"c\").\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tOn(\"c\", \"Id\").IsEqual(\"a\", \"CaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"CaseStatus\").As(\"cs\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"c\", \"StatusId\").IsEqual(\"cs\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"Case\").As(\"pc\").\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tOn(\"pc\", \"Id\").IsEqual(\"c\", \"ParentCaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"CaseStatus\").As(\"csp\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"pc\", \"StatusId\").IsEqual(\"csp\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Where(\"fss\", \"Id\").IsEqual(Column.Const(finishedSyncSessionId))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.And(\"ess\", \"Code\").IsEqual(Column.Const(\"Sended\"))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.And(\"emd\", \"RoleId\").In(Column.Parameters(activityParticipantRolesList))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.And(\"a\", \"ServiceProcessed\").IsEqual(Column.Parameter(false))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.And(\"a\", \"SendDate\").IsGreaterOrEqual(Column.Const(lowerDate))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.OrderByAsc(\"a\", \"SendDate\") as Select;\r\n}\r\n\r\nprotected IList<EmailRegistrationData> GetActivityRecordsId(Guid finishedSyncSessionId) {\r\n\tvar userConnection = Get<UserConnection>(\"UserConnection\");\r\n\tvar maxSendDate = (int)Terrasoft.Core.Configuration.SysSettings.GetValue<int>(userConnection,\r\n\t\"MaxEmailSendDateForCaseReg\", 10);\r\n\tvar lowerDate = DateTime.UtcNow.AddDays(-maxSendDate);\r\n\tvar activityParticipantRolesList = new List<Guid> { CaseServiceConsts.ActivityParticipantRoleTo,\r\n\t\tCaseServiceConsts.ActivityParticipantRoleCc, CaseServiceConsts.ActivityParticipantRoleBcc };\r\n\tSelect selectQuery = Features.GetIsEnabled(\"UseFilterBySendStatusInCaseRegistrationProcess\") \r\n\t\t\t\t\t? GetOldSelectWithFilterBySendStatus(finishedSyncSessionId, lowerDate, activityParticipantRolesList) \r\n\t\t\t\t\t: new Select(userConnection).Distinct()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ActivityId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"a\", \"CaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"cs\", \"IsFinal\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"pc\", \"Id\").As(\"ParentCaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"csp\", \"IsFinal\").As(\"IsParentCaseFinal\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ParentMessageId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"emd\", \"ConversationId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.Column(\"a\", \"SendDate\")\r\n\t\t\t\t\t\t\t\t\t\t\t.From(\"EmailMessageData\").As(\"emd\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"FinishedSyncSession\").As(\"fss\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"fss\", \"SyncSessionId\").IsEqual(\"emd\", \"SyncSessionId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"Activity\").As(\"a\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"a\", \"Id\").IsEqual(\"emd\", \"ActivityId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.InnerJoin(\"MailboxForIncidentRegistration\").As(\"im\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"im\", \"MailboxSyncSettingsId\").IsEqual(\"emd\", \"MailboxSyncSettings\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"Case\").As(\"c\").\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tOn(\"c\", \"Id\").IsEqual(\"a\", \"CaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"CaseStatus\").As(\"cs\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"c\", \"StatusId\").IsEqual(\"cs\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"Case\").As(\"pc\").\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tOn(\"pc\", \"Id\").IsEqual(\"c\", \"ParentCaseId\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t.LeftOuterJoin(\"CaseStatus\").As(\"csp\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.On(\"pc\", \"StatusId\").IsEqual(\"csp\", \"Id\")\r\n\t\t\t\t\t\t\t\t\t\t\t.Where(\"fss\", \"Id\").IsEqual(Column.Const(finishedSyncSessionId))\r\n\t\t\t\t\t\t\t\t\t\t\t\t.And(\"emd\", \"RoleId\").In(Column.Parameters(activityParticipantRolesList))\r\n\t\t\t\t\t\t\t\t\t\t\t\t.And(\"a\", \"ServiceProcessed\").IsEqual(Column.Parameter(false))\r\n\t\t\t\t\t\t\t\t\t\t\t\t.And(\"a\", \"SendDate\").IsGreaterOrEqual(Column.Const(lowerDate))\r\n\t\t\t\t\t\t\t\t\t\t\t\t.OrderByAsc(\"a\", \"SendDate\") as Select;\r\n\t\t\tIList<EmailRegistrationData> result = new List<EmailRegistrationData>();\r\n\tselectQuery.BuildParametersAsValue = true;\r\n\t_log.DebugFormat(@\"[EmailSyncSessionId:{1}]|Select activity for registration Sql text {0}\", selectQuery.GetSqlText(), Get<Guid>(\"RecordId\"));\r\n\tusing (DBExecutor dbExec = userConnection.EnsureDBConnection()) {\r\n\t\tvar casesToReopen = new List<ActivityCaseValuePair>();\r\n\t\tusing (IDataReader reader = selectQuery.ExecuteReader(dbExec)) {\r\n\t\t\twhile (reader.Read()) {\r\n\t\t\t\tbool isCaseEmptyOrFinal = reader.GetColumnValue<Guid>(\"CaseId\") == default(Guid) || reader.GetColumnValue<bool>(\"IsFinal\") == true;\r\n\t\t\t\tbool isParentCaseEmptyOrFinal = reader.GetColumnValue<Guid>(\"ParentCaseId\") == default(Guid) || reader.GetColumnValue<bool>(\"IsParentCaseFinal\") == true;\r\n\t\t\t\t_log.InfoFormat(@\"[EmailSyncSessionId:{0}]| isCaseEmptyOrFinal {1}, isParentCaseEmptyOrFinal {2}\", Get<Guid>(\"RecordId\"), isCaseEmptyOrFinal, isParentCaseEmptyOrFinal);\r\n\t\t\t\tif (isCaseEmptyOrFinal && isParentCaseEmptyOrFinal) {\r\n\t\t\t\t\tGuid activityId = reader.GetColumnValue<Guid>(\"ActivityId\");\r\n\t\t\t\t\tvar emailMessage = new EmailRegistrationData(activityId, reader.GetColumnValue<Guid>(\"Id\"),\r\n\t\t\t\t\t reader.GetColumnValue<Guid>(\"ParentMessageId\"));\r\n\t\t\t\t\t emailMessage.ConversationId = reader.GetColumnValue<Guid>(\"ConversationId\");\r\n\t\t\t\t\tresult.Add(emailMessage);\r\n\t\t\t\t\t_log.InfoFormat(@\"[EmailSyncSessionId:{1}]|Add new activity with ActivityId:{0} in registration collection\", activityId, Get<Guid>(\"RecordId\"));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcasesToReopen.Add(new ActivityCaseValuePair() {\r\n\t\t\t\t\t\tCaseId = isCaseEmptyOrFinal ? reader.GetColumnValue<Guid>(\"ParentCaseId\") : reader.GetColumnValue<Guid>(\"CaseId\"),\r\n\t\t\t\t\t\tActivityId = reader.GetColumnValue<Guid>(\"ActivityId\")\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tforeach (var @case in casesToReopen) {\r\n\t\t\tvar schema = userConnection.EntitySchemaManager.FindInstanceByName(\"Activity\");\r\n\t\t\tEntity entity = schema.CreateEntity(userConnection);\r\n\t\t\tif (entity.FetchFromDB(@case.ActivityId)) {\r\n\t\t\t\tentity.SetColumnValue(\"CaseId\", null);\r\n\t\t\t\tentity.SetColumnValue(\"CaseId\", @case.CaseId);\r\n\t\t\t\tentity.Save(false);\r\n\t\t\t\t_log.InfoFormat(@\"[EmailSyncSessionId:{0}]|Reopen case by CaseId = {1}. ActivityId = {2}\", Get<Guid>(\"RecordId\"), @case.CaseId, @case.ActivityId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nprotected Guid RegisterIncidentFromEmail(Guid activityId) {\r\n\tGuid result  = default(Guid);\r\n\tvar userConnection = Get<UserConnection>(\"UserConnection\");\r\n\tbool isNeddToCheckRegistrationEmailsInActivityParticipants = !Features.GetIsEnabled(\"RegisterCaseFromAnyEmail\");\r\n\tbool isCategoryFromMailBoxEnabled = Features.GetIsEnabled(\"CategoryFromMailBox\");\r\n\tbool getCategoryFromEmailSysSettings = Terrasoft.Core.Configuration.SysSettings.GetValue<bool>(userConnection,\r\n\t            \"DefineCaseCategoryFromMailBox\", false);\r\n\tIncindentRegistrationMailboxFilter maiboxFilter = new IncindentRegistrationMailboxFilter(userConnection);\r\n\tif (isNeddToCheckRegistrationEmailsInActivityParticipants && !maiboxFilter.IsPresentRegistrationEmailsInActivity(activityId)) {\r\n\t\t_log.InfoFormat(@\"[EmailSyncSessionId:{0}] | Incident registration mailboxes does not exists for ActivityId = {1}\", Get<Guid>(\"RecordId\"), activityId);\r\n\t\treturn result;\r\n\t}\r\n\tvar helper = ClassFactory.Get<IncidentRegistrationFromEmailHelper>(\r\n\t    new ConstructorArgument(\"userConnection\", userConnection));\r\n\tif (isCategoryFromMailBoxEnabled && getCategoryFromEmailSysSettings) {\r\n\t    var supportMailBoxStore = ClassFactory.Get<CategoryFromSupportMailBox>(\r\n\t    new ConstructorArgument(\"userConnection\", userConnection));\r\n\t    var categoryProvider = ClassFactory.Get<CategoryProvider>(\r\n\t    new ConstructorArgument(\"supportMailBoxRepository\", supportMailBoxStore));\r\n\t    var categoryWrapper = ClassFactory.Get<CategoryProviderWrapper>(\r\n\t    new ConstructorArgument(\"userConnection\", userConnection));\r\n\t    categoryWrapper.CategoryProvider = categoryProvider;\r\n\t    helper.CategoryProviderWrapper = categoryWrapper;\r\n\t}\r\n\thelper.EmailSyncSession = Get<Guid>(\"RecordId\");\r\n\tresult = helper.GetRegisterIncidentId(activityId);\r\n\treturn result;\r\n}",
      "BK34": "en-US",
      "Labels": [],
      "BK24": []
    }
  }
}